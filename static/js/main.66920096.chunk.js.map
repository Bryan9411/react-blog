{"version":3,"sources":["utils.js","webApi.js","IMG/avatar.png","pages/HomePage/HomePage.js","Contexts.js","pages/LoginPage/LoginPage.js","pages/ArchivePage/ArchivePage.js","pages/AboutPage/AboutPage.js","pages/ReleasePage/ReleasePage.js","pages/RegisterPage/RegisterPage.js","pages/PostPage/PostPage.js","components/Header/Header.js","IMG/bannerr.jpg","Banner/Banner.js","components/App/App.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","getPostFromPage","page","limit","Container","styled","div","Information","PostList","Avatar","About","Link","PostContainer","CreatedAt","Title","h2","Auther","h4","Content","ReadMore","Post","post","Date","createdAt","toLocaleString","title","nickname","body","to","id","HomePage","useState","posts","setPosts","useEffect","console","log","src","avatar","alt","map","AuthContext","createContext","LoginContainer","form","LoginBox","Info","InputBox","LoginButton","button","ErrorMessage","LoginPage","username","setUsername","password","setPassword","errorMessage","setErrorMessage","setUser","useContext","history","useHistory","onSubmit","e","preventDefault","method","JSON","stringify","login","data","ok","message","push","type","placeholder","value","onChange","target","ul","ButtonWrapper","ButtonContainer","LastPage","ThisPage","NextPage","PageButtonCard","currentPage","handleChangePageLast","handleChangePageNext","totalPages","onClick","ArchivePage","setTotalPages","setCurrentPage","get","totalArticals","Number","Math","ceil","AboutContainer","AboutContent","AboutPage","FormContainer","Form","Error","ReleasePage","setTitle","content","setContent","addPost","toString","RegisterContainer","RegisterBox","RegisterButton","RegisterPage","setNickname","register","SinglePage","TiTle","PostPage","setPost","useParams","getPostPage","HeaderContainer","HeaderLeft","HeaderRight","Logo","Nav","props","$active","Header","location","useLocation","user","className","pathname","BannerContainer","Banner","banner","Root","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66920096.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\n// 把 token 存到 localstorage\nexport const setAuthToken = (token) => {\n  return localStorage.setItem(TOKEN_NAME, token);\n};\n\n// 把 token 從 localstorage 拿出來\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n\n// 計算所有文章頁數\nexport const getPages = (allPages) => {\n  let pages = [];\n  for (let i = 0; i <= allPages; i++) {\n    pages.push(i);\n  }\n  return pages;\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\n// 註冊 API\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\n// 登入 API\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\n// 驗證身分 API\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\n// 取得所有文章 API\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\n// 取得單篇文章\nexport const getPostPage = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n// 取得分頁文章 API\nexport const getPostFromPage = (page, limit) => {\n  return fetch(\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc`\n  ).then((res) => res);\n};\n\n// 新增文章 API\nexport const addPost = (title, content) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body: content,\n    }),\n  }).then((res) => res.json());\n};\n","export default __webpack_public_path__ + \"static/media/avatar.859b5d00.png\";","import styled from \"styled-components\";\nimport { getPosts } from \"../../webApi\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport avatar from \"../../IMG/avatar.png\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  display: flex;\n  max-width: 1440px;\n  margin: 0 auto;\n  flex-direction: colum;\n  align-items: center;\n`;\nconst Information = styled.div`\n  position: fixed;\n  top: 50%;\n  margin: 0px 100px 0 40px;\n  align-items: center;\n\n  h2 {\n    font-weight: bold;\n    text-align: center;\n  }\n\n  span {\n    display: block;\n    text-align: center;\n  }\n`;\nconst PostList = styled.div`\n  width: calc(100% - 290px);\n  margin-left: auto;\n`;\nconst Avatar = styled.div`\n  width: 150px;\n  height: 150px;\n  img {\n    border-radius: 50%;\n    width: 100%;\n  }\n`;\nconst About = styled(Link)`\n  display: block;\n  font-size: 16px;\n  color: rgba(21, 87, 23, 1);\n  text-decoration none;\n  margin: 20px 0;\n  text-align: center;\n`;\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgb(238, 238, 238);\n  margin-bottom: 20px;\n  padding: 25px 0px;\n`;\nconst CreatedAt = styled.div`\n  margin: 5px 0px;\n  color: #6c6c6c;\n  font-size: 16px;\n`;\nconst Title = styled.h2`\n  letter-spacing: 0.1em;\n  font-size: 35px;\n`;\nconst Auther = styled.h4``;\nconst Content = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 500px;\n  font-size: 22px;\n`;\nconst ReadMore = styled(Link)`\n  display: block;\n  font-size: 16px;\n  color: rgba(26, 137, 23, 1);\n  text-decoration none;\n  margin: 20px 0;\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <CreatedAt>{new Date(post.createdAt).toLocaleString()}</CreatedAt>\n      <Title>{post.title}</Title>\n      <Auther>{post.nickname}</Auther>\n      <Content>{post.body}</Content>\n      <ReadMore to={`/posts/${post.id}`}>Read More</ReadMore>\n    </PostContainer>\n  );\n}\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  // let pageNum = useRef()\n  // const limit = 8\n\n  useEffect(() => {\n    getPosts().then((posts) => {\n      setPosts(posts);\n      console.log(posts);\n    });\n  }, []);\n\n  return (\n    <Container>\n      <Information>\n        <Avatar>\n          <img src={avatar} alt=\"avatar\" />\n        </Avatar>\n        <h2>My Blog</h2>\n        <About to={\"/about\"}>關於我</About>\n      </Information>\n      <PostList>\n        {posts.map((post) => (\n          <Post post={post} key={post.id} />\n        ))}\n      </PostList>\n    </Container>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n","import { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getMe, login } from \"../../webApi\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../Contexts\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginContainer = styled.form`\n  max-width: 1440px;\n  margin: 0 auto;\n`;\nconst LoginBox = styled.div`\n  position: absolute;\n  width: 400px;\n  height: 330px;\n  border: 1px solid black;\n  margin: 0 auto;\n  padding: 45px 20px;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nconst Title = styled.div`\n  text-align: center;\n\n  span {\n    margin-bottom: 10px;\n  }\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  marin: 0 auto;\n`;\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n\n  input {\n    width: 200px;\n    border-radius: 4px;\n    padding: 6px;\n    margin: 15px;\n  }\n`;\nconst LoginButton = styled.button`\n  margin: 15px auto;\n  width: 140px;\n  border-radius: 4px;\n  background-color: rgba(34, 34, 34);\n  color: white;\n  text-align: center;\n  line-height: 45px;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  cursor: pointer;\n\n  &:hover {\n    color: rgba(26, 137, 23, 1);\n    font-weight: 700;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const { setUser } = useContext(AuthContext);\n  const history = useHistory();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      console.log(data);\n      if (data.ok !== 1) {\n        setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      //進行身分驗證\n      getMe().then((res) => {\n        if (res.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(res.message);\n        }\n        setUser(res.data);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  const handleInputUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handleInputPassword = (e) => {\n    setPassword(\"Lidemy\");\n  };\n  return (\n    <LoginContainer onSubmit={handleSubmit}>\n      <LoginBox>\n        <Title>\n          <h2>Welcome back</h2>\n          <span>Enter the account and password</span>\n        </Title>\n        <Info>\n          <InputBox>\n            <input\n              type=\"text\"\n              placeholder=\"please enter your account\"\n              value={username}\n              onChange={handleInputUsername}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"please enter your password\"\n              value={password}\n              onChange={handleInputPassword}\n            />\n          </InputBox>\n          <LoginButton type=\"submit\">Login</LoginButton>\n        </Info>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </LoginBox>\n    </LoginContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport { getPostFromPage } from \"../../webApi\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport avatar from \"../../IMG/avatar.png\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: colum;\n  margin: 0 auto;\n  max-width: 1440px;\n  align-items: center;\n`;\nconst Information = styled.div`\n  position: fixed;\n  top: 50%;\n  margin: 0px 5%;\n  align-items: center;\n\n  h2 {\n    font-weight: bold;\n    text-align: center;\n  }\n\n  span {\n    display: block;\n    text-align: center;\n  }\n`;\nconst PostList = styled.ul`\n  margin: 0 auto;\n\n  h1 {\n    padding-top: 30px;\n    color: rgba(21, 87, 23, 1);\n  }\n`;\nconst Avatar = styled.div`\n  width: 150px;\n  height: 150px;\n  img {\n    border-radius: 50%;\n    width: 100%;\n  }\n`;\nconst About = styled(Link)`\n  display: block;\n  font-size: 16px;\n  color: rgba(21, 87, 23, 1);\n  text-decoration none;\n  margin: 20px 0;\n  text-align: center;\n`;\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgb(238, 238, 238);\n  margin-bottom: 20px;\n  padding: 25px 0px;\n  max-width: 500px;\n`;\nconst CreatedAt = styled.div`\n  margin: 5px 0px;\n  color: #6c6c6c;\n  font-size: 16px;\n`;\nconst Title = styled.h2`\n  letter-spacing: 0.1em;\n`;\nconst Content = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 500px;\n  font-size: 22px;\n`;\nconst ReadMore = styled(Link)`\n  display: block;\n  font-size: 16px;\n  color: rgba(26, 137, 23, 1);\n  text-decoration none;\n  margin: 20px 0;\n  \n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: colum;\n`;\nconst ButtonContainer = styled.div`\n  display: flex;\n  padding: 20px 0;\n  align-items: center;\n  a {\n    display: block;\n    margin: 0 20px;\n    text-decoration: none;\n    color: rgba(26, 137, 23, 1);\n    font-size: 20px;\n    &:hover {\n      letter-spacing: 0.2em;\n      transition: all 1s;\n    }\n  }\n`;\nconst LastPage = styled(Link)``;\nconst ThisPage = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n`;\nconst NextPage = styled(Link)``;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <CreatedAt>{new Date(post.createdAt).toLocaleString()}</CreatedAt>\n      <Title>{post.title}</Title>\n      <Content>{post.body}</Content>\n      <ReadMore to={`/posts/${post.id}`}>ReadMore</ReadMore>\n    </PostContainer>\n  );\n}\n\nfunction PageButtonCard({\n  currentPage,\n  handleChangePageLast,\n  handleChangePageNext,\n  totalPages,\n}) {\n  return (\n    <ButtonContainer>\n      {currentPage !== 1 && (\n        <LastPage onClick={handleChangePageLast}>Last</LastPage>\n      )}\n      <ThisPage>{currentPage}</ThisPage>\n      {currentPage !== totalPages && (\n        <NextPage onClick={handleChangePageNext}>Next</NextPage>\n      )}\n    </ButtonContainer>\n  );\n}\n\nexport default function ArchivePage() {\n  const [posts, setPosts] = useState([]);\n\n  // 全部頁數有幾頁 ， 預設 0 頁\n  const [totalPages, setTotalPages] = useState(0);\n\n  // 目前在第幾頁 , 預設第一頁\n  const [currentPage, setCurrentPage] = useState(1);\n  const limit = 3;\n\n  const handleChangePageNext = (e) => {\n    e.preventDefault();\n    setCurrentPage(currentPage + 1);\n  };\n\n  const handleChangePageLast = (e) => {\n    e.preventDefault();\n    setCurrentPage(currentPage - 1);\n  };\n\n  useEffect(() => {\n    // 先 render 第一頁資料\n    getPostFromPage(1, limit)\n      .then((res) => {\n        console.log(res);\n        // 從 response header 找到文章總數\n        if (res.headers.get(\"X-Total-Count\")) {\n          // 找到文章總數\n          const totalArticals = Number(res.headers.get(\"X-Total-Count\"));\n          console.log(totalArticals);\n\n          // 找到全部有幾頁 (文章總數 / limit)\n          let totalPages = Math.ceil(totalArticals / limit);\n          console.log(\"totalPages\", totalPages);\n          if (!totalPages) {\n            totalPages = 1;\n          }\n          setTotalPages(totalPages);\n          console.log(res);\n          return res.json();\n        }\n      })\n      .then((posts) => {\n        setPosts(posts);\n      });\n  }, []);\n\n  useEffect(() => {\n    return getPostFromPage(currentPage, limit)\n      .then((res) => {\n        return res.json();\n      })\n      .then((posts) => {\n        console.log(posts);\n        setPosts(posts);\n      });\n  }, [currentPage]);\n\n  return (\n    <Container>\n      <Information>\n        <Avatar>\n          <img src={avatar} alt=\"avatar\" />\n        </Avatar>\n        <h2>My Blog</h2>\n        <About to={\"/about\"}>關於我</About>\n      </Information>\n      <PostList>\n        <h1>文章列表</h1>\n        {posts.map((post) => (\n          <Post post={post} key={post.id} />\n        ))}\n        <ButtonWrapper>\n          <PageButtonCard\n            totalPages={totalPages}\n            currentPage={currentPage}\n            handleChangePageNext={handleChangePageNext}\n            handleChangePageLast={handleChangePageLast}\n          />\n        </ButtonWrapper>\n      </PostList>\n    </Container>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nPageButtonCard.propTypes = {\n  currentPage: PropTypes.number,\n  totalPages: PropTypes.number,\n  handleChangePageLast: PropTypes.func,\n  handleChangePageNext: PropTypes.func,\n};\n","import styled from \"styled-components\";\nimport avatar from \"../../IMG/avatar.png\";\n\nconst AboutContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 1440px;\n  margin: 10% auto;\n`;\nconst Avatar = styled.div`\n  width: 150px;\n  height: 150px;\n  margin: auto;\n\n  img {\n    border-radius: 50%;\n    width: 100%;\n  }\n`;\nconst AboutContent = styled.div`\n  margin: 20px auto;\n  & + & {\n    margin: 10px 0;\n  }\n`;\nexport default function AboutPage() {\n  return (\n    <AboutContainer>\n      <Avatar>\n        <img src={avatar} alt=\"avatar\" />\n      </Avatar>\n      <AboutContent>\n        <p>我是 Bryan，目前參加程式導師計畫第四期，學習前端技術。</p>\n        <p>這裡會記錄我在程式導師計畫裡的心得與一些筆記。</p>\n      </AboutContent>\n    </AboutContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport { addPost } from \"../../webApi\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 1440px;\n  margin: auto;\n\n  h2 {\n    text-align: center;\n  }\n`;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  border: 1px solid black;\n  border-radius: 4px;\n  width: 70%;\n  padding: 20px;\n\n  input {\n    width: 40%;\n    padding: 5px;\n    margin: 10px 0;\n  }\n  span {\n  }\n  textarea {\n    width: 80%;\n    height: 300px;\n    padding: 5px;\n    margin: 10px 0;\n  }\n  button {\n    width: 5%;\n    padding: 5px;\n    margin: 10px 0;\n  }\n`;\nconst Error = styled.div`\n  color: red;\n  margin: 10px auto;\n  font-size: 16px;\n`;\nexport default function ReleasePage() {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const handleInputContent = (e) => {\n    setContent(e.target.value);\n  };\n  const handleInputTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // 呼叫 addPost api\n    addPost(title, content).then((data) => {\n      console.log(data);\n      if (data.ok === 0) {\n        return setErrorMessage(data.message.toString());\n      }\n      history.push(\"/\");\n    });\n  };\n\n  return (\n    <FormContainer>\n      <h2>新增文章</h2>\n      <Form>\n        <h4>標題:</h4>\n        <input type=\"text\" value={title} onChange={handleInputTitle} />\n        <h4>內容:</h4>\n        <textarea type=\"text\" value={content} onChange={handleInputContent} />\n        <button type=\"submit\" onClick={handleSubmit}>\n          送出\n        </button>\n      </Form>\n      {errorMessage && <Error>資料有缺</Error>}\n    </FormContainer>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { register, getMe } from \"../../webApi\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../Contexts\";\nimport { useHistory } from \"react-router-dom\";\nconst RegisterContainer = styled.form`\n  max-width: 1440px;\n  margin: 0 auto;\n`;\nconst RegisterBox = styled.div`\n  position: absolute;\n  width: 400px;\n  height: 300px;\n  border: 1px solid black;\n  margin: 0 auto;\n  padding: 20px 20px 125px 20px;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nconst Title = styled.div`\n  text-align: center;\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  marin: 0 auto;\n`;\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n\n  input {\n    width: 200px;\n    border-radius: 4px;\n    padding: 6px;\n    margin: 18px;\n  }\n`;\nconst RegisterButton = styled.button`\n  margin: 15px auto;\n  width: 140px;\n  border-radius: 4px;\n  background-color: rgba(34, 34, 34);\n  color: white;\n  text-align: center;\n  line-height: 45px;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  cursor: pointer;\n\n  &:hover {\n    color: rgba(26, 137, 23, 1);\n    font-weight: 700;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n\n  color: red;\n`;\n\nexport default function RegisterPage() {\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const { setUser } = useContext(AuthContext);\n\n  const handleInputNickname = (e) => {\n    setNickname(e.target.value);\n  };\n\n  const handleInputUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handleInputPassword = (e) => {\n    setPassword(\"Lidemy\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    register(nickname, username, password).then((data) => {\n      if (data.ok !== 1) {\n        setErrorMessage(data.message);\n      }\n      // 把 token 存進去 localstorage\n      setAuthToken(data.token);\n\n      // call getMe api 進行身分驗證\n      getMe().then((res) => {\n        if (res.ok !== 1) {\n          setErrorMessage(res.message);\n        }\n        setUser(res.data);\n        history.push(\"./login\");\n      });\n    });\n  };\n  return (\n    <RegisterContainer onSubmit={handleSubmit}>\n      <RegisterBox>\n        <Title>\n          <h2>Welcome to register</h2>\n          <span>Enter the account and password to register</span>\n        </Title>\n        <Info>\n          <InputBox>\n            nikname:\n            <input\n              type=\"text\"\n              placeholder=\"please enter your nickname\"\n              value={nickname}\n              onChange={handleInputNickname}\n            />\n            account:\n            <input\n              type=\"text\"\n              placeholder=\"please enter your account\"\n              value={username}\n              onChange={handleInputUsername}\n            />\n            password:\n            <input\n              type=\"password\"\n              placeholder=\"please enter your password\"\n              value={password}\n              onChange={handleInputPassword}\n            />\n          </InputBox>\n          <RegisterButton type=\"submit\">Register</RegisterButton>\n        </Info>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </RegisterBox>\n    </RegisterContainer>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getPostPage } from \"../../webApi\";\nimport avatar from \"../../IMG/avatar.png\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  display: flex;\n  max-width: 1440px;\n  margin: 0 auto;\n  flex-direction: colum;\n  align-items: center;\n`;\nconst Information = styled.div`\n  position: fixed;\n  top: 50%;\n  margin: 0px 5%;\n  align-items: center;\n\n  h2 {\n    font-weight: bold;\n    text-align: center;\n  }\n\n  span {\n    display: block;\n    text-align: center;\n  }\n`;\nconst SinglePage = styled.ul`\n  margin: 0 auto;\n`;\nconst Avatar = styled.div`\n  width: 150px;\n  height: 150px;\n  img {\n    border-radius: 50%;\n    width: 100%;\n  }\n`;\nconst About = styled(Link)`\n  display: block;\n  font-size: 16px;\n  color: rgba(21, 87, 23, 1);\n  text-decoration none;\n  margin: 20px 0;\n  text-align: center;\n`;\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgb(238, 238, 238);\n  margin-bottom: 20px;\n  padding: 25px 0px;\n  max-width: 500px;\n`;\nconst TiTle = styled.h2``;\nconst Content = styled.div`\n  width: 700px;\n  letter-spacing: 0.2em;\n  font-size: 16px;\n`;\nconst CreatedAt = styled.div`\n  color: rgba(26, 137, 23, 1);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <CreatedAt>{new Date(post.createdAt).toLocaleString()}</CreatedAt>\n      <TiTle>標題: {post.title}</TiTle>\n      <Content>{post.body}</Content>\n    </PostContainer>\n  );\n}\n\nexport default function PostPage() {\n  const [post, setPost] = useState([]);\n  let { id } = useParams();\n  useEffect(() => {\n    getPostPage(id).then((post) => setPost(post));\n  }, [id]);\n  return (\n    <Container>\n      <Information>\n        <Avatar>\n          <img src={avatar} alt=\"avatar\" />\n        </Avatar>\n        <h2>My Blog</h2>\n        <About to={\"/about\"}>關於我</About>\n      </Information>\n      <SinglePage>\n        <Post post={post} key={post.id} />\n      </SinglePage>\n    </Container>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n","import { useContext } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../Contexts\";\nimport { setAuthToken } from \"../../utils\";\nconst HeaderContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  padding: 10px;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 1620px;\n`;\nconst HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n\n  .left__button {\n    margin: 10px;\n    font-size: 16px;\n  }\n`;\nconst HeaderRight = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 10px;\n  .register {\n    color: rgba(26, 137, 23, 1);\n    border: 1px solid rgba(26, 137, 23, 1);\n    padding: 8px 12px;\n    border-radius: 4px;\n    letter-spacing: 0.1em;\n    font-size: 14px;\n    text-align: center;\n    line-height: 13px;\n  }\n\n  .login {\n    color: rgba(26, 137, 23, 1);\n    border: 1px solid rgba(26, 137, 23, 1);\n    padding: 8px 12px;\n    border-radius: 4px;\n    letter-spacing: 0.1em;\n    font-size: 14px;\n    text-align: center;\n    line-height: 13px;\n  }\n`;\nconst Logo = styled(Link)`\n  font-size: 28px;\n  font-weight: bold;\n  text-decoration: none;\n  margin: 10px;\n  color: rgba(26, 137, 23, 1);\n`;\nconst Nav = styled(Link)`\n  display: block;\n  padding: 21px;\n  color: rgb(40, 40, 40, 0.6);\n  text-decoration: none;\n  cursor: pointer;\n\n  & + & {\n    margin: 10px;\n    padding: 10px;\n  }\n\n  &:hover {\n    color: rgba(26, 137, 23, 1);\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n    \n    color: rgba(26, 137, 23, 1);\n  `}\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const { user, setUser } = useContext(AuthContext);\n  const history = useHistory();\n  const handleSignOut = (e) => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <HeaderContainer>\n      <HeaderLeft>\n        <Logo className=\"logo\" to=\"/\">\n          My Blog\n        </Logo>\n        <Nav\n          className=\"left__button\"\n          to=\"/\"\n          $active={location.pathname === \"/\"}\n        >\n          Home\n        </Nav>\n        <Nav\n          className=\"left__button\"\n          to=\"/archive\"\n          $active={location.pathname === \"/archive\"}\n        >\n          Archive\n        </Nav>\n        <Nav\n          className=\"left__button\"\n          to=\"/about\"\n          $active={location.pathname === \"/about\"}\n        >\n          About\n        </Nav>\n      </HeaderLeft>\n      <HeaderRight>\n        {!user && (\n          <Nav\n            className=\"login\"\n            to=\"/login\"\n            $active={location.pathname === \"/login\"}\n          >\n            Login\n          </Nav>\n        )}\n        {!user && (\n          <Nav\n            className=\"register\"\n            to=\"/register\"\n            $active={location.pathname === \"/register\"}\n          >\n            Register\n          </Nav>\n        )}\n        {user && (\n          <Nav\n            className=\"left__button\"\n            to=\"/release\"\n            $active={location.pathname === \"/release\"}\n          >\n            Release\n          </Nav>\n        )}\n        {user && <Nav onClick={handleSignOut}>Sign Out</Nav>}\n      </HeaderRight>\n    </HeaderContainer>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bannerr.28d969bb.jpg\";","import styled from \"styled-components\";\nimport banner from \"../IMG/bannerr.jpg\";\n\nconst BannerContainer = styled.div`\n  height: 500px;\n  width: 1440px;\n  margin: auto;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\nexport default function Banner() {\n  return (\n    <BannerContainer>\n      <img src={banner} alt=\"banner\" />\n    </BannerContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport HomePage from \"../../pages/HomePage/\";\nimport LoginPage from \"../../pages/LoginPage/\";\nimport ArchivePage from \"../../pages/ArchivePage\";\nimport AboutPage from \"../../pages/AboutPage\";\nimport ReleasePage from \"../../pages/ReleasePage\";\nimport RegisterPage from \"../../pages/RegisterPage\";\nimport PostPage from \"../../pages/PostPage\";\nimport Header from \"../Header/\";\nimport { getAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../Contexts\";\nimport { getMe } from \"../../webApi\";\nimport Banner from \"../../Banner/Banner\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst Root = styled.div``;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      getMe().then((res) => {\n        if (res.ok) {\n          setUser(res.data);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Banner />\n              <HomePage />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <Banner />\n              <PostPage />\n            </Route>\n            <Route path=\"/archive\">\n              <Banner />\n              <ArchivePage />\n            </Route>\n            <Route path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route path=\"/release\">\n              <ReleasePage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}